/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
 
#define CMK 0
#define SYB 1
#define NUM 2
#define NAV 3
#define CFG 4

&caps_word {
   continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_wq_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };
        combo_spaces_tab {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp ESC>;
        };
        combo_mid_caps {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp CAPS>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";
                colemak_layer {
// ---------------------------------------------------------------------------
// |     |  Q  |  W  |  F  |  P  |  B  | |  J  |  L  |  U  |  Y  |BKSPC|     |
// |     |  A  |  R  |  S  |  T  |  G  | |  M  |  N  |  E  |  I  |  O  |     |
// |     |  Z  |  X  |  C  |  D  |  V  | |  K  |  H  |  ,  |  .  | NAV |     |
//                   | CMD |-SYB-| SPC | | RET |—NUM-| SFT |
                        bindings = <
   &none &kp Q &kp W &kp F &kp P &kp B &kp J &kp L   &kp U     &kp Y   &kp BSPC  &none
   &none &kp A &kp R &kp S &kp T &kp G &kp M &kp N   &kp E     &kp I   &kp O     &none
   &none &kp Z &kp X &kp C &kp D &kp V &kp K &kp H   &kp COMMA &kp DOT &mo NAV &none
            &kp LCMD &mo SYB &kp SPACE &kp RET &mo NUM &kp RSHFT
                        >;
                };
                symbol_layer {
// ---------------------------------------------------------------------------
// |     | DEL |  \  |  %  |  $  |  £  | |     |  ^  |  {  |  }  |BKSPC|     |
// |     |  #  |  (  |  )  |  :  |     | |     |  "  |  [  |  ]  |  ;  |     |
// |     | ESC |  @  |  !  |  &  |     | |     |  `  |  <  |  >  |  ?  |     |
//                   | CMD |_SYB_| SPC | | RET |-NXT-| ALT |
                        bindings = <
   &none &kp DEL  &kp BSLH &kp PRCNT &kp DLLR  &none &none &kp CARET &kp LBRC &kp RBRC &kp BSPC  &none
   &none &kp HASH &kp LPAR &kp RPAR  &kp COLON &none &none &kp DQT   &kp LBKT &kp RBKT &kp SEMI  &none
   &none &kp ESC  &kp AT   &kp EXCL  &kp AMPS  &none &none &kp GRAVE &kp LT   &kp GT   &kp QMARK &none
                             &trans &trans &kp SPACE &kp RET &trans &sk RALT
                        >;
                };
                number_layer {
// ---------------------------------------------------------------------------
// |     |     |  6  |  5  |  4  |     | |     |  *  |  -  |  /  |BKSPC|     |
// |     |  3  |  2  |  1  |  0  |     | |     |  '  |  _  |  =  |  +  |     |
// |     |     |  9  |  8  |  7  |     | |     |  |  |  ,  |  .  |  ~  |     |
//                   | CTL |-NXT-| SPC | | RET |_NUM_| SFT |
                        bindings = <
   &none &none  &kp N6 &kp N5 &kp N4 &none &none &kp STAR &kp MINUS &kp FSLH  &kp BSPC  &none
   &none &kp N3 &kp N2 &kp N1 &kp N0 &none &none &kp SQT  &kp UNDER &kp EQUAL &kp PLUS  &none 
   &none &none  &kp N9 &kp N8 &kp N7 &none &none &kp PIPE &trans    &trans    &kp TILDE &none
                 &sk LCTL &trans &kp SPACE &kp RET  &trans    &trans
                        >;
                };
                nav_layer {
// ---------------------------------------------------------------------------
// |     |BTCLR| F 6 | F 5 | F 4 | BLE | | USB |BRIDN|BRIUP|VOLDN|VOLUP|     |
// |     | F 3 | F 2 | F 1 | F10 | F11 | |left |down | up  |right|VMUTE|     |
// |     | CAP | F 9 | F 8 | F 7 | F12 | | END |PG_DN|PG_UP| HOM |_NAV_|     |
//                   | CTL | BT0 | BT1 | | BT2 | BT3 | ALT |
                        bindings = <
   &none &none      &kp F6 &kp F5 &kp F4  &out OUT_BLE &out OUT_USB &kp C_BRI_DN &kp C_BRI_UP &kp C_VOL_DN &kp C_VOL_UP &none 
   &none &kp F3     &kp F2 &kp F1 &kp F10 &kp F11      &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp K_MUTE   &none 
   &none &caps_word &kp F9 &kp F8 &kp F7  &kp F12      &kp END      &kp PG_DN    &kp PG_UP    &kp HOME     &trans       &none 
                         &sk LCTL &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &sk RALT
                        >;
                };
        };
};
